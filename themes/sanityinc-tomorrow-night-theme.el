;;; sanityinc-tomorrow-night-theme.el --- Customization of Steve Purcell's sanityinc-tomorrow-night-theme

;; Copyright (C) 2012-2017 Steve Purcell
;; Modifications Copyright (C) 2019 Dylan Gleason
;; 2019-11-26: Customize face attributes to work better with
;; 256-color terminal environments.

;; Author: Steve Purcell <steve@sanityinc.com>
;; Keywords: faces themes
;; Homepage: http://github.com/purcell/color-theme-sanityinc-tomorrow
;; Version: 0

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;; This theme overrides foreground and backround color attributes for
;; various faces initially set via `sanityinc-tomorrow-night-theme',
;; so that it plays nicely with 256-color terminal environments.

(deftheme sanityinc-tomorrow-night
  "Created 2019-11-26.")

(custom-theme-set-variables
 'sanityinc-tomorrow-night
 '(frame-background-mode (quote dark))
 '(ansi-color-names-vector ["#1d1f21" "#cc6666" "#b5bd68" "#f0c674" "#81a2be" "#b294bb" "#8abeb7" "#c5c8c6"])
 '(ansi-color-faces-vector [default bold shadow italic underline bold bold-italic bold])
 '(window-divider-mode nil))

(custom-theme-set-faces
 'sanityinc-tomorrow-night
 '(bold ((((class color) (min-colors 89)) (:weight bold))))
 '(bold-italic ((((class color) (min-colors 89)) (:slant italic :weight bold))))
 '(underline ((((class color) (min-colors 89)) (:underline t))))
 '(italic ((((class color) (min-colors 89)) (:slant italic))))
 '(font-lock-builtin-face ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(font-lock-comment-delimiter-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(font-lock-comment-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(font-lock-constant-face ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(font-lock-doc-face ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(font-lock-function-name-face ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(font-lock-keyword-face ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(font-lock-negation-char-face ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(font-lock-preprocessor-face ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(font-lock-regexp-grouping-backslash ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(font-lock-regexp-grouping-construct ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(font-lock-string-face ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(font-lock-type-face ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(font-lock-warning-face ((((class color) (min-colors 89)) (:weight bold :foreground "#cc6666"))))
 '(shadow ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(success ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(error ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(warning ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(tooltip ((((class color) (min-colors 89)) (:foreground "#f0c674" :background "#1d1f21" :inverse-video t))))
 '(cursor ((((class color) (min-colors 89)) (:background "#cc6666"))))
 '(fringe ((((class color) (min-colors 89)) (:background "#22a224a427a7" :foreground "#969896"))))
 '(line-number ((((class color) (min-colors 89)) (:background "#22a224a427a7" :foreground "#969896"))))
 '(line-number-current-line ((((class color) (min-colors 89)) (:inherit line-number :foreground "#c5c8c6" :weight bold))))
 '(vertical-border ((t (:foreground "#262626"))))
 '(border ((t (:background "#444444" :foreground "#282a2e"))))
 '(highlight ((((class color) (min-colors 89)) (:inverse-video nil :background "#282a2e"))))
 '(mode-line ((((class color) (min-colors 89)) (:foreground "#c5c8c6" :background "#444444" :weight normal :box (:line-width 1 :color "#444444")))))
 '(mode-line-buffer-id ((((class color) (min-colors 89)) (:foreground "#b294bb" :background nil))))
 '(mode-line-inactive ((((class color) (min-colors 89)) (:inherit mode-line :foreground "#969896" :background "#282a2e" :weight normal))))
 '(mode-line-emphasis ((((class color) (min-colors 89)) (:foreground "#c5c8c6" :slant italic))))
 '(mode-line-highlight ((((class color) (min-colors 89)) (:foreground "#b294bb" :box nil :weight bold))))
 '(minibuffer-prompt ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(region ((t (:background "#262626" :inverse-video nil))))
 '(secondary-selection ((((class color) (min-colors 89)) (:background "#282a2e"))))
 '(header-line ((((class color) (min-colors 89)) (:inherit mode-line-inactive :foreground "#8abeb7" :background nil))))
 '(match ((((class color) (min-colors 89)) (:foreground "#81a2be" :background "#1d1f21" :inverse-video t))))
 '(isearch ((((class color) (min-colors 89)) (:foreground "#f0c674" :background "#1d1f21" :inverse-video t))))
 '(lazy-highlight ((((class color) (min-colors 89)) (:foreground "#8abeb7" :background "#1d1f21" :inverse-video t))))
 '(isearch-fail ((((class color) (min-colors 89)) (:background "#1d1f21" :inherit font-lock-warning-face :inverse-video t))))
 '(link ((((class color) (min-colors 89)) (:foreground nil :underline t))))
 '(widget-button ((((class color) (min-colors 89)) (:underline t))))
 '(widget-field ((((class color) (min-colors 89)) (:box (:line-width 1 :color "#c5c8c6") :background "#262626"))))
 '(compilation-column-number ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(compilation-line-number ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(compilation-mode-line-exit ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(compilation-mode-line-fail ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(compilation-mode-line-run ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(custom-variable-tag ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(custom-group-tag ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(custom-state ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(diff-added ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(diff-changed ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(diff-removed ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(diff-header ((((class color) (min-colors 89)) (:foreground "#8abeb7" :background nil))))
 '(diff-file-header ((((class color) (min-colors 89)) (:foreground "#81a2be" :background nil))))
 '(diff-hunk-header ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(diff-indicator-added ((((class color) (min-colors 89)) (:inherit diff-added))))
 '(diff-indicator-changed ((((class color) (min-colors 89)) (:inherit diff-changed))))
 '(diff-indicator-removed ((((class color) (min-colors 89)) (:inherit diff-removed))))
 '(diff-refine-added ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(diff-refine-changed ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(diff-refine-removed ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(eldoc-highlight-function-argument ((((class color) (min-colors 89)) (:foreground "#b5bd68" :weight bold))))
 '(flycheck-error ((((class color) (min-colors 89)) (:underline (:style wave :color "#cc6666")))))
 '(flycheck-info ((((class color) (min-colors 89)) (:underline (:style wave :color "#8abeb7")))))
 '(flycheck-warning ((((class color) (min-colors 89)) (:underline (:style wave :color "#de935f")))))
 '(flycheck-fringe-error ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(flycheck-fringe-info ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(flycheck-fringe-warning ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(flymake-error ((((class color) (min-colors 89)) (:underline (:style wave :color "#cc6666")))))
 '(flymake-note ((((class color) (min-colors 89)) (:underline (:style wave :color "#8abeb7")))))
 '(flymake-warning ((((class color) (min-colors 89)) (:underline (:style wave :color "#de935f")))))
 '(ido-subdir ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(ido-first-match ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(ido-only-match ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(ido-indicator ((((class color) (min-colors 89)) (:foreground "#cc6666" :background "#1d1f21"))))
 '(ido-virtual ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(Info-quoted ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(info-index-match ((((class color) (min-colors 89)) (:inherit isearch))))
 '(info-menu-header ((((class color) (min-colors 89)) (:foreground "#b5bd68" :weight bold :height 1.4))))
 '(info-menu-star ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(info-node ((((class color) (min-colors 89)) (:foreground "#b5bd68" :weight bold :slant italic))))
 '(info-title-1 ((((class color) (min-colors 89)) (:weight bold :height 1.6))))
 '(info-title-2 ((((class color) (min-colors 89)) (:weight bold :height 1.4))))
 '(info-title-3 ((((class color) (min-colors 89)) (:weight bold :height 1.2))))
 '(info-title-4 ((((class color) (min-colors 89)) (:weight bold))))
 '(info-xref-visited ((((class color) (min-colors 89)) (:foreground "#969896" :underline t))))
 '(message-header-other ((((class color) (min-colors 89)) (:foreground nil :background nil :weight normal))))
 '(message-header-subject ((((class color) (min-colors 89)) (:inherit message-header-other :weight bold :foreground "#f0c674"))))
 '(message-header-to ((((class color) (min-colors 89)) (:inherit message-header-other :weight bold :foreground "#de935f"))))
 '(message-header-cc ((((class color) (min-colors 89)) (:inherit message-header-to :foreground nil))))
 '(message-header-name ((((class color) (min-colors 89)) (:foreground "#81a2be" :background nil))))
 '(message-header-newsgroups ((((class color) (min-colors 89)) (:foreground "#8abeb7" :background nil :slant normal))))
 '(message-separator ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(outline-1 ((((class color) (min-colors 89)) (:inherit nil :foreground "#81a2be"))))
 '(outline-2 ((((class color) (min-colors 89)) (:inherit nil :foreground "#b294bb"))))
 '(outline-3 ((((class color) (min-colors 89)) (:inherit nil :foreground "#8abeb7"))))
 '(outline-4 ((((class color) (min-colors 89)) (:inherit nil :foreground "#f0c674"))))
 '(outline-5 ((((class color) (min-colors 89)) (:inherit nil :foreground "#de935f"))))
 '(outline-6 ((((class color) (min-colors 89)) (:inherit nil :foreground "#81a2be"))))
 '(outline-7 ((((class color) (min-colors 89)) (:inherit nil :foreground "#b294bb"))))
 '(outline-8 ((((class color) (min-colors 89)) (:inherit nil :foreground "#8abeb7"))))
 '(show-paren-match ((((class color) (min-colors 89)) (:background "#b294bb" :foreground "#1d1f21"))))
 '(show-paren-mismatch ((((class color) (min-colors 89)) (:background "#cc6666" :foreground "#1d1f21"))))
 '(sh-heredoc ((((class color) (min-colors 89)) (:foreground nil :inherit font-lock-string-face :weight normal))))
 '(sh-quoted-exec ((((class color) (min-colors 89)) (:foreground nil :inherit font-lock-preprocessor-face))))
 '(which-func ((((class color) (min-colors 89)) (:foreground "#81a2be" :background nil :weight bold))))
 '(whitespace-big-indent ((((class color) (min-colors 89)) (:background "#cc6666" :foreground "#373b41"))))
 '(whitespace-empty ((((class color) (min-colors 89)) (:background "#f0c674" :foreground "#de935f"))))
 '(whitespace-hspace ((t (:background "#262626" :foreground "#969896"))))
 '(whitespace-indentation ((t (:background "#262626" :foreground "#969896"))))
 '(whitespace-line ((t (:background "#262626" :foreground "#de935f"))))
 '(whitespace-newline ((t (:background "#262626" :foreground "#969896"))))
 '(whitespace-space ((t (:background "#262626" :foreground "#969896"))))
 '(whitespace-space-after-tab ((t (:background "#262626" :foreground "#f0c674"))))
 '(whitespace-space-before-tab ((t (:background "#262626" :foreground "#de935f"))))
 '(whitespace-tab ((t (:background "#262626" :foreground "#969896"))))
 '(whitespace-trailing ((((class color) (min-colors 89)) (:background "#de935f" :foreground "#373b41"))))
 '(trailing-whitespace ((((class color) (min-colors 89)) (:inherit whitespace-trailing))))
 '(window-divider ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(window-divider-first-pixel ((t (:foreground "#262626"))))
 '(window-divider-last-pixel ((t (:foreground "#262626"))))
 '(company-preview ((t (:background "#262626" :foreground "#969896"))))
 '(company-preview-common ((((class color) (min-colors 89)) (:inherit company-preview :foreground "#cc6666"))))
 '(company-preview-search ((((class color) (min-colors 89)) (:inherit company-preview :foreground "#81a2be"))))
 '(company-tooltip ((t (:background "#262626"))))
 '(company-tooltip-selection ((((class color) (min-colors 89)) (:foreground "#969896" :inverse-video t))))
 '(company-tooltip-common ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#cc6666"))))
 '(company-tooltip-common-selection ((((class color) (min-colors 89)) (:inherit company-tooltip-selection :foreground "#cc6666"))))
 '(company-tooltip-search ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#81a2be"))))
 '(company-tooltip-annotation ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#b5bd68"))))
 '(company-tooltip-annotation-selection ((((class color) (min-colors 89)) (:inherit company-tooltip-selection :foreground "#b5bd68"))))
 '(company-scrollbar-bg ((((class color) (min-colors 89)) (:inherit (quote company-tooltip) :background "#282a2e"))))
 '(company-scrollbar-fg ((t (:background "#262626"))))
 '(company-echo-common ((((class color) (min-colors 89)) (:inherit company-echo :foreground "#cc6666"))))
 '(flx-highlight-face ((((class color) (min-colors 89)) (:inherit nil :foreground "#f0c674" :weight bold :underline nil))))
 '(helm-buffer-saved-out ((((class color) (min-colors 89)) (:inherit warning))))
 '(helm-buffer-size ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(helm-buffer-not-saved ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(helm-buffer-process ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(helm-buffer-directory ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(helm-ff-dotted-directory ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(helm-ff-dotted-symlink-directory ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(helm-ff-directory ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(helm-candidate-number ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(helm-match ((((class color) (min-colors 89)) (:inherit match))))
 '(helm-selection ((((class color) (min-colors 89)) (:inherit highlight))))
 '(helm-separator ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(helm-source-header ((((class color) (min-colors 89)) (:weight bold :foreground "#de935f" :height 1.44))))
 '(helm-visible-mark ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(ivy-action ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(ivy-confirm-face ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(ivy-current-match ((((class color) (min-colors 89)) (:foreground "#b5bd68" :inherit highlight :underline t))))
 '(ivy-cursor ((t (:background "#262626"))))
 '(ivy-match-required-face ((((class color) (min-colors 89)) (:foreground "#cc6666" :background "#1d1f21"))))
 '(ivy-remote ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(ivy-subdir ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(ivy-virtual ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(ivy-minibuffer-match-face-1 ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(ivy-minibuffer-match-face-2 ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(ivy-minibuffer-match-face-3 ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(ivy-minibuffer-match-face-4 ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-bisect-bad ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(magit-bisect-good ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-bisect-skip ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-blame-date ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(magit-blame-heading ((((class color) (min-colors 89)) (:foreground "#de935f" :background "#282a2e"))))
 '(magit-branch-current ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(magit-branch-local ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(magit-branch-remote ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-cherry-equivalent ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(magit-cherry-unmatched ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(magit-diff-added ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-diff-added-highlight ((((class color) (min-colors 89)) (:foreground "#b5bd68" :background "#282a2e"))))
 '(magit-diff-base ((((class color) (min-colors 89)) (:foreground "#1d1f21" :background "#de935f"))))
 '(magit-diff-base-highlight ((((class color) (min-colors 89)) (:foreground "#de935f" :background "#282a2e"))))
 '(magit-diff-context ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-diff-context-highlight ((((class color) (min-colors 89)) (:foreground "#969896" :background "#282a2e"))))
 '(magit-diff-file-heading ((((class color) (min-colors 89)) (:foreground "#c5c8c6"))))
 '(magit-diff-file-heading-highlight ((t (:background "#262626" :weight bold))))
 '(magit-diff-file-heading-selection ((((class color) (min-colors 89)) (:foreground "#de935f" :background "#282a2e"))))
 '(magit-diff-hunk-heading ((t (:background "#262626" :foreground "#c5c8c6"))))
 '(magit-diff-hunk-heading-highlight ((t (:background "#262626"))))
 '(magit-diff-lines-heading ((((class color) (min-colors 89)) (:foreground "#f0c674" :background "#cc6666"))))
 '(magit-diff-removed ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-diff-removed-highlight ((((class color) (min-colors 89)) (:foreground "#de935f" :background "#282a2e"))))
 '(magit-diffstat-added ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-diffstat-removed ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-dimmed ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-filename ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(magit-hash ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-header-line ((((class color) (min-colors 89)) (:inherit nil :weight bold))))
 '(magit-log-author ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-log-date ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(magit-log-graph ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-mode-line-process ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-mode-line-process-error ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(magit-process-ng ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-process-ok ((((class color) (min-colors 89)) (:inherit success))))
 '(magit-reflog-amend ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(magit-reflog-checkout ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(magit-reflog-cherry-pick ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-reflog-commit ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-reflog-merge ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-reflog-other ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(magit-reflog-rebase ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(magit-reflog-remote ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(magit-reflog-reset ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-refname ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(magit-section-heading ((((class color) (min-colors 89)) (:foreground "#f0c674" :weight bold))))
 '(magit-section-heading-selection ((((class color) (min-colors 89)) (:foreground "#de935f" :weight bold))))
 '(magit-section-highlight ((((class color) (min-colors 89)) (:background "#282a2e" :weight bold))))
 '(magit-sequence-drop ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(magit-sequence-head ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(magit-sequence-part ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-sequence-stop ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(magit-signature-bad ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-signature-error ((((class color) (min-colors 89)) (:inherit error))))
 '(magit-signature-expired ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(magit-signature-good ((((class color) (min-colors 89)) (:inherit success))))
 '(magit-signature-revoked ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(magit-signature-untrusted ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(magit-tag ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(markdown-url-face ((((class color) (min-colors 89)) (:inherit link))))
 '(markdown-link-face ((((class color) (min-colors 89)) (:foreground "#81a2be" :underline t))))
 '(markdown-code-face ((((class color) (min-colors 89)) (:inherit fixed-pitch :background "#1d1f21" :foreground "#b294bb"))))
 '(markdown-inline-code-face ((((class color) (min-colors 89)) (:inherit markdown-code-face))))
 '(neo-banner-face ((((class color) (min-colors 89)) (:foreground "#81a2be" :weight bold))))
 '(neo-button-face ((((class color) (min-colors 89)) (:underline t))))
 '(neo-dir-link-face ((((class color) (min-colors 89)) (:foreground "#de935f"))))
 '(neo-expand-btn-face ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(neo-file-link-face ((((class color) (min-colors 89)) (:foreground "#c5c8c6"))))
 '(neo-header-face ((((class color) (min-colors 89)) (:foreground "#c5c8c6" :background "#282a2e"))))
 '(neo-root-dir-face ((((class color) (min-colors 89)) (:foreground "#81a2be" :weight bold))))
 '(neo-vc-added-face ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(neo-vc-conflict-face ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(neo-vc-default-face ((((class color) (min-colors 89)) (:foreground "#c5c8c6"))))
 '(neo-vc-edited-face ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(neo-vc-ignored-face ((t (:foreground "#262626"))))
 '(neo-vc-missing-face ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(neo-vc-needs-merge-face ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(neo-vc-unlocked-changes-face ((((class color) (min-colors 89)) (:foreground "#81a2be" :slant italic))))
 '(neo-vc-user-face ((((class color) (min-colors 89)) (:foreground "#cc6666" :slant italic))))
 '(rainbow-delimiters-depth-1-face ((((class color) (min-colors 89)) (:foreground "#c5c8c6"))))
 '(rainbow-delimiters-depth-2-face ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(rainbow-delimiters-depth-3-face ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(rainbow-delimiters-depth-4-face ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(rainbow-delimiters-depth-5-face ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(rainbow-delimiters-depth-6-face ((((class color) (min-colors 89)) (:foreground "#c5c8c6"))))
 '(rainbow-delimiters-depth-7-face ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(rainbow-delimiters-depth-8-face ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(rainbow-delimiters-depth-9-face ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(transient-enabled-suffix ((((class color) (min-colors 89)) (:foreground "#22a224a427a7" :background "#b5bd68" :weight bold))))
 '(transient-disabled-suffix ((((class color) (min-colors 89)) (:foreground "#c5c8c6" :background "#cc6666" :weight bold))))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 89)) (:foreground "#c5c8c6"))))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 89)) (:foreground "#b5bd68" :weight bold))))
 '(undo-tree-visualizer-active-branch-face ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(default ((((class color) (min-colors 89)) (:foreground "#c5c8c6" :background "#1d1f21")))))

(provide-theme 'sanityinc-tomorrow-night)
